"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var platform_1 = require("tns-core-modules/platform");
/* Endpoints enviroments */
exports.endpoint = 'http://35.243.251.185:8080/api';
//export const endpoint:string = 'http://pimpopay.com/api';
/* Endpoints enviroments */
exports.redirectTo = function (index) {
    var urls = [
        '/home/balance',
        '/home/buy',
        '/home/credit',
        '/home/transfer',
        '/home/user'
    ];
    return urls[index];
};
exports.openRoute = function (route) {
    var routes = ['/access/login', 'access/enroll'];
    var isOpen = false;
    routes.forEach(function (url) {
        if (route.indexOf(url) > -1) {
            isOpen = true;
        }
    });
    return isOpen;
};
exports.btoa = function (creditials) {
    if (platform_1.isIOS) {
        var text = NSString.stringWithString(creditials.username + ':' + creditials.password);
        var data = text.dataUsingEncoding(NSUTF8StringEncoding);
        return data.base64EncodedStringWithOptions(0);
    }
    else {
        var text = new java.lang.String(creditials.username + ':' + creditials.password);
        var data = text.getBytes('UTF-8');
        return android.util.Base64.encodeToString(data, android.util.Base64.DEFAULT);
    }
};
exports.mobileOperatorList = function () {
    return ['claro', 'oi', 'tim', 'vivo'];
};
exports.formatPhoneNumber = function (phone) {
    phone = phone.replace(/\D/, '');
    return '+55' + phone;
};
exports.adjustDecimal = function (nr, decimal) {
    var og = Math.pow(10, decimal);
    return Math.floor(nr * og) / og;
};
var PositionChevron;
(function (PositionChevron) {
    PositionChevron[PositionChevron["CLOSE"] = 0] = "CLOSE";
    PositionChevron[PositionChevron["OPEN"] = -90] = "OPEN";
})(PositionChevron = exports.PositionChevron || (exports.PositionChevron = {}));
var TransactionStatus;
(function (TransactionStatus) {
    TransactionStatus["AUTHORIZED"] = "AUTHORIZED";
    /** Negada */
    TransactionStatus["DENIED"] = "DENIED";
    /** Cancelada */
    TransactionStatus["CANCELLED"] = "CANCELLED";
    /** Liquidada */
    TransactionStatus["SETTLED"] = "SETTLED";
    /** Disputada */
    TransactionStatus["DISPUTED"] = "DISPUTED";
    /** Disputa respondida */
    TransactionStatus["DISPUTE_RESPONDED"] = "DISPUTE_RESPONDED";
    /** Arbitrada */
    TransactionStatus["ARBITRATED"] = "ARBITRATED";
})(TransactionStatus = exports.TransactionStatus || (exports.TransactionStatus = {}));
var ResumeActionButton;
(function (ResumeActionButton) {
    ResumeActionButton["RETRY"] = "retry";
    ResumeActionButton["NEW"] = "new";
    ResumeActionButton["GOSTART"] = "goStart";
})(ResumeActionButton = exports.ResumeActionButton || (exports.ResumeActionButton = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFyaWFibGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidmFyaWFibGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0Esc0RBQWtEO0FBT2xELDJCQUEyQjtBQUVkLFFBQUEsUUFBUSxHQUFXLGdDQUFnQyxDQUFDO0FBQ2pFLDJEQUEyRDtBQUUzRCwyQkFBMkI7QUFFZCxRQUFBLFVBQVUsR0FBRyxVQUFDLEtBQWE7SUFDdEMsSUFBTSxJQUFJLEdBQUc7UUFDWCxlQUFlO1FBQ2YsV0FBVztRQUNYLGNBQWM7UUFDZCxnQkFBZ0I7UUFDaEIsWUFBWTtLQUNiLENBQUM7SUFDRixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNyQixDQUFDLENBQUM7QUFFVyxRQUFBLFNBQVMsR0FBRyxVQUFDLEtBQUs7SUFDN0IsSUFBTSxNQUFNLEdBQUcsQ0FBQyxlQUFlLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDbEQsSUFBSSxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBRW5CLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBQSxHQUFHO1FBQ2hCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRTtZQUMzQixNQUFNLEdBQUcsSUFBSSxDQUFDO1NBQ2Y7SUFDSCxDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsQ0FBQztBQUVXLFFBQUEsSUFBSSxHQUFHLFVBQUMsVUFBdUI7SUFDMUMsSUFBSSxnQkFBSyxFQUFFO1FBQ1QsSUFBSSxJQUFJLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUNsQyxVQUFVLENBQUMsUUFBUSxHQUFHLEdBQUcsR0FBRyxVQUFVLENBQUMsUUFBUSxDQUNoRCxDQUFDO1FBQ0YsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDeEQsT0FBTyxJQUFJLENBQUMsOEJBQThCLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDL0M7U0FBTTtRQUNMLElBQUksSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQzdCLFVBQVUsQ0FBQyxRQUFRLEdBQUcsR0FBRyxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQ2hELENBQUM7UUFDRixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2xDLE9BQU8sT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUN2QyxJQUFJLEVBQ0osT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUM1QixDQUFDO0tBQ0g7QUFDSCxDQUFDLENBQUM7QUFFVyxRQUFBLGtCQUFrQixHQUFHO0lBQ2hDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztBQUN4QyxDQUFDLENBQUM7QUFFVyxRQUFBLGlCQUFpQixHQUFHLFVBQUMsS0FBYTtJQUM3QyxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDaEMsT0FBTyxLQUFLLEdBQUcsS0FBSyxDQUFDO0FBQ3ZCLENBQUMsQ0FBQztBQUVXLFFBQUEsYUFBYSxHQUFHLFVBQUMsRUFBVSxFQUFFLE9BQWU7SUFDdkQsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDL0IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7QUFDbEMsQ0FBQyxDQUFDO0FBRUYsSUFBWSxlQUdYO0FBSEQsV0FBWSxlQUFlO0lBQ3pCLHVEQUFTLENBQUE7SUFDVCx1REFBVSxDQUFBO0FBQ1osQ0FBQyxFQUhXLGVBQWUsR0FBZix1QkFBZSxLQUFmLHVCQUFlLFFBRzFCO0FBRUQsSUFBWSxpQkFtQlg7QUFuQkQsV0FBWSxpQkFBaUI7SUFDM0IsOENBQXlCLENBQUE7SUFDekIsYUFBYTtJQUNiLHNDQUFpQixDQUFBO0lBRWpCLGdCQUFnQjtJQUNoQiw0Q0FBdUIsQ0FBQTtJQUV2QixnQkFBZ0I7SUFDaEIsd0NBQW1CLENBQUE7SUFFbkIsZ0JBQWdCO0lBQ2hCLDBDQUFxQixDQUFBO0lBRXJCLHlCQUF5QjtJQUN6Qiw0REFBdUMsQ0FBQTtJQUV2QyxnQkFBZ0I7SUFDaEIsOENBQXlCLENBQUE7QUFDM0IsQ0FBQyxFQW5CVyxpQkFBaUIsR0FBakIseUJBQWlCLEtBQWpCLHlCQUFpQixRQW1CNUI7QUFZRCxJQUFZLGtCQUlYO0FBSkQsV0FBWSxrQkFBa0I7SUFDNUIscUNBQWUsQ0FBQTtJQUNmLGlDQUFXLENBQUE7SUFDWCx5Q0FBbUIsQ0FBQTtBQUNyQixDQUFDLEVBSlcsa0JBQWtCLEdBQWxCLDBCQUFrQixLQUFsQiwwQkFBa0IsUUFJN0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVkZW50aWFscyB9IGZyb20gJy4uL21vZGVscy9jcmVkZW50aWFscyc7XG5pbXBvcnQgeyBpc0lPUyB9IGZyb20gJ3Rucy1jb3JlLW1vZHVsZXMvcGxhdGZvcm0nO1xuXG5kZWNsYXJlIHZhciBOU1N0cmluZzogYW55O1xuZGVjbGFyZSB2YXIgTlNVVEY4U3RyaW5nRW5jb2Rpbmc6IGFueTtcbmRlY2xhcmUgdmFyIGphdmE6IGFueTtcbmRlY2xhcmUgdmFyIGFuZHJvaWQ6IGFueTtcblxuLyogRW5kcG9pbnRzIGVudmlyb21lbnRzICovXG5cbmV4cG9ydCBjb25zdCBlbmRwb2ludDogc3RyaW5nID0gJ2h0dHA6Ly8zNS4yNDMuMjUxLjE4NTo4MDgwL2FwaSc7XG4vL2V4cG9ydCBjb25zdCBlbmRwb2ludDpzdHJpbmcgPSAnaHR0cDovL3BpbXBvcGF5LmNvbS9hcGknO1xuXG4vKiBFbmRwb2ludHMgZW52aXJvbWVudHMgKi9cblxuZXhwb3J0IGNvbnN0IHJlZGlyZWN0VG8gPSAoaW5kZXg6IG51bWJlcik6IHN0cmluZyA9PiB7XG4gIGNvbnN0IHVybHMgPSBbXG4gICAgJy9ob21lL2JhbGFuY2UnLFxuICAgICcvaG9tZS9idXknLFxuICAgICcvaG9tZS9jcmVkaXQnLFxuICAgICcvaG9tZS90cmFuc2ZlcicsXG4gICAgJy9ob21lL3VzZXInXG4gIF07XG4gIHJldHVybiB1cmxzW2luZGV4XTtcbn07XG5cbmV4cG9ydCBjb25zdCBvcGVuUm91dGUgPSAocm91dGUpOiBib29sZWFuID0+IHtcbiAgY29uc3Qgcm91dGVzID0gWycvYWNjZXNzL2xvZ2luJywgJ2FjY2Vzcy9lbnJvbGwnXTtcbiAgbGV0IGlzT3BlbiA9IGZhbHNlO1xuXG4gIHJvdXRlcy5mb3JFYWNoKHVybCA9PiB7XG4gICAgaWYgKHJvdXRlLmluZGV4T2YodXJsKSA+IC0xKSB7XG4gICAgICBpc09wZW4gPSB0cnVlO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGlzT3Blbjtcbn07XG5cbmV4cG9ydCBjb25zdCBidG9hID0gKGNyZWRpdGlhbHM6IENyZWRlbnRpYWxzKTogc3RyaW5nID0+IHtcbiAgaWYgKGlzSU9TKSB7XG4gICAgbGV0IHRleHQgPSBOU1N0cmluZy5zdHJpbmdXaXRoU3RyaW5nKFxuICAgICAgY3JlZGl0aWFscy51c2VybmFtZSArICc6JyArIGNyZWRpdGlhbHMucGFzc3dvcmRcbiAgICApO1xuICAgIGxldCBkYXRhID0gdGV4dC5kYXRhVXNpbmdFbmNvZGluZyhOU1VURjhTdHJpbmdFbmNvZGluZyk7XG4gICAgcmV0dXJuIGRhdGEuYmFzZTY0RW5jb2RlZFN0cmluZ1dpdGhPcHRpb25zKDApO1xuICB9IGVsc2Uge1xuICAgIGxldCB0ZXh0ID0gbmV3IGphdmEubGFuZy5TdHJpbmcoXG4gICAgICBjcmVkaXRpYWxzLnVzZXJuYW1lICsgJzonICsgY3JlZGl0aWFscy5wYXNzd29yZFxuICAgICk7XG4gICAgbGV0IGRhdGEgPSB0ZXh0LmdldEJ5dGVzKCdVVEYtOCcpO1xuICAgIHJldHVybiBhbmRyb2lkLnV0aWwuQmFzZTY0LmVuY29kZVRvU3RyaW5nKFxuICAgICAgZGF0YSxcbiAgICAgIGFuZHJvaWQudXRpbC5CYXNlNjQuREVGQVVMVFxuICAgICk7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBtb2JpbGVPcGVyYXRvckxpc3QgPSAoKSA9PiB7XG4gIHJldHVybiBbJ2NsYXJvJywgJ29pJywgJ3RpbScsICd2aXZvJ107XG59O1xuXG5leHBvcnQgY29uc3QgZm9ybWF0UGhvbmVOdW1iZXIgPSAocGhvbmU6IHN0cmluZykgPT4ge1xuICBwaG9uZSA9IHBob25lLnJlcGxhY2UoL1xcRC8sICcnKTtcbiAgcmV0dXJuICcrNTUnICsgcGhvbmU7XG59O1xuXG5leHBvcnQgY29uc3QgYWRqdXN0RGVjaW1hbCA9IChucjogbnVtYmVyLCBkZWNpbWFsOiBudW1iZXIpOiBudW1iZXIgPT4ge1xuICB2YXIgb2cgPSBNYXRoLnBvdygxMCwgZGVjaW1hbCk7XG4gIHJldHVybiBNYXRoLmZsb29yKG5yICogb2cpIC8gb2c7XG59O1xuXG5leHBvcnQgZW51bSBQb3NpdGlvbkNoZXZyb24ge1xuICBDTE9TRSA9IDAsXG4gIE9QRU4gPSAtOTBcbn1cblxuZXhwb3J0IGVudW0gVHJhbnNhY3Rpb25TdGF0dXMge1xuICBBVVRIT1JJWkVEID0gJ0FVVEhPUklaRUQnLFxuICAvKiogTmVnYWRhICovXG4gIERFTklFRCA9ICdERU5JRUQnLFxuXG4gIC8qKiBDYW5jZWxhZGEgKi9cbiAgQ0FOQ0VMTEVEID0gJ0NBTkNFTExFRCcsXG5cbiAgLyoqIExpcXVpZGFkYSAqL1xuICBTRVRUTEVEID0gJ1NFVFRMRUQnLFxuXG4gIC8qKiBEaXNwdXRhZGEgKi9cbiAgRElTUFVURUQgPSAnRElTUFVURUQnLFxuXG4gIC8qKiBEaXNwdXRhIHJlc3BvbmRpZGEgKi9cbiAgRElTUFVURV9SRVNQT05ERUQgPSAnRElTUFVURV9SRVNQT05ERUQnLFxuXG4gIC8qKiBBcmJpdHJhZGEgKi9cbiAgQVJCSVRSQVRFRCA9ICdBUkJJVFJBVEVEJ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlc3VtZU1vZGVsIHtcbiAgdHJhbnNhY3Rpb25UeXBlOiBzdHJpbmc7XG4gIHN0YXR1c0NvZGU/OiBzdHJpbmc7XG4gIHN0YXR1czogc3RyaW5nO1xuICBoYXNGYWlsdXJlOiBib29sZWFuO1xuICBhbW91bnQ6IG51bWJlcjtcbiAgZGVzdGlueUFjY291bnQ/OiBzdHJpbmc7XG4gIHBsYW46IHN0cmluZztcbn1cblxuZXhwb3J0IGVudW0gUmVzdW1lQWN0aW9uQnV0dG9uIHtcbiAgUkVUUlkgPSAncmV0cnknLFxuICBORVcgPSAnbmV3JyxcbiAgR09TVEFSVCA9ICdnb1N0YXJ0J1xufVxuIl19