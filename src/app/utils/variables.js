"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var platform_1 = require("tns-core-modules/platform");
/* Endpoints enviroments */
exports.endpoint = 'http://10.0.0.4:8081/api';
//export const endpoint:string = 'http://pimpopay.com/api';
/* Endpoints enviroments */
exports.redirectTo = function (index) {
    var urls = ['/home/buy', '/home/credit', '/home/balance', '/home/transfer', '/home/user'];
    return urls[index];
};
exports.openRoute = function (route) {
    var routes = ['/access/login', 'access/enroll'];
    var isOpen = false;
    routes.forEach(function (url) {
        if (route.indexOf(url) > -1) {
            isOpen = true;
        }
    });
    return isOpen;
};
exports.btoa = function (creditials) {
    if (platform_1.isIOS) {
        var text = NSString.stringWithString(creditials.username + ':' + creditials.password);
        var data = text.dataUsingEncoding(NSUTF8StringEncoding);
        return data.base64EncodedStringWithOptions(0);
    }
    else {
        var text = new java.lang.String(creditials.username + ':' + creditials.password);
        var data = text.getBytes('UTF-8');
        return android.util.Base64.encodeToString(data, android.util.Base64.DEFAULT);
    }
};
exports.mobileOperatorList = function () {
    return ['claro', 'oi', 'tim', 'vivo'];
};
exports.formatPhoneNumber = function (phone) {
    phone = phone.replace(/\D/, '');
    return '+55' + phone;
};
exports.adjustDecimal = function (nr, decimal) {
    var og = Math.pow(10, decimal);
    return Math.floor(nr * og) / og;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFyaWFibGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidmFyaWFibGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0Esc0RBQWtEO0FBT2xELDJCQUEyQjtBQUVkLFFBQUEsUUFBUSxHQUFXLDBCQUEwQixDQUFDO0FBQzNELDJEQUEyRDtBQUUzRCwyQkFBMkI7QUFFZCxRQUFBLFVBQVUsR0FBRyxVQUFDLEtBQUs7SUFDOUIsSUFBTSxJQUFJLEdBQUcsQ0FBQyxXQUFXLEVBQUUsY0FBYyxFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUM1RixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNyQixDQUFDLENBQUM7QUFFVyxRQUFBLFNBQVMsR0FBRyxVQUFDLEtBQUs7SUFDN0IsSUFBTSxNQUFNLEdBQUcsQ0FBQyxlQUFlLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDbEQsSUFBSSxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBRW5CLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBQSxHQUFHO1FBQ2hCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRTtZQUMzQixNQUFNLEdBQUcsSUFBSSxDQUFDO1NBQ2Y7SUFDSCxDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsQ0FBQztBQUVXLFFBQUEsSUFBSSxHQUFHLFVBQUMsVUFBdUI7SUFDMUMsSUFBSSxnQkFBSyxFQUFFO1FBQ1QsSUFBSSxJQUFJLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxRQUFRLEdBQUcsR0FBRyxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN0RixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQUN4RCxPQUFPLElBQUksQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUMvQztTQUFNO1FBQ0wsSUFBSSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsUUFBUSxHQUFHLEdBQUcsR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDakYsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNsQyxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDOUU7QUFDSCxDQUFDLENBQUM7QUFFVyxRQUFBLGtCQUFrQixHQUFHO0lBQ2hDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztBQUN4QyxDQUFDLENBQUM7QUFFVyxRQUFBLGlCQUFpQixHQUFHLFVBQUMsS0FBYTtJQUM3QyxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDaEMsT0FBTyxLQUFLLEdBQUcsS0FBSyxDQUFDO0FBQ3ZCLENBQUMsQ0FBQztBQUVXLFFBQUEsYUFBYSxHQUFHLFVBQUMsRUFBUyxFQUFFLE9BQWM7SUFDckQsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDL0IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7QUFDbEMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3JlZGVudGlhbHMgfSBmcm9tICcuLi9tb2RlbHMvY3JlZGVudGlhbHMnO1xuaW1wb3J0IHsgaXNJT1MgfSBmcm9tICd0bnMtY29yZS1tb2R1bGVzL3BsYXRmb3JtJztcblxuZGVjbGFyZSB2YXIgTlNTdHJpbmc6IGFueTtcbmRlY2xhcmUgdmFyIE5TVVRGOFN0cmluZ0VuY29kaW5nOiBhbnk7XG5kZWNsYXJlIHZhciBqYXZhOiBhbnk7XG5kZWNsYXJlIHZhciBhbmRyb2lkOiBhbnk7XG5cbi8qIEVuZHBvaW50cyBlbnZpcm9tZW50cyAqL1xuXG5leHBvcnQgY29uc3QgZW5kcG9pbnQ6IHN0cmluZyA9ICdodHRwOi8vMTAuMC4wLjQ6ODA4MS9hcGknO1xuLy9leHBvcnQgY29uc3QgZW5kcG9pbnQ6c3RyaW5nID0gJ2h0dHA6Ly9waW1wb3BheS5jb20vYXBpJztcblxuLyogRW5kcG9pbnRzIGVudmlyb21lbnRzICovXG5cbmV4cG9ydCBjb25zdCByZWRpcmVjdFRvID0gKGluZGV4KTogc3RyaW5nID0+IHtcbiAgY29uc3QgdXJscyA9IFsnL2hvbWUvYnV5JywgJy9ob21lL2NyZWRpdCcsICcvaG9tZS9iYWxhbmNlJywgJy9ob21lL3RyYW5zZmVyJywgJy9ob21lL3VzZXInXTtcbiAgcmV0dXJuIHVybHNbaW5kZXhdO1xufTtcblxuZXhwb3J0IGNvbnN0IG9wZW5Sb3V0ZSA9IChyb3V0ZSk6IGJvb2xlYW4gPT4ge1xuICBjb25zdCByb3V0ZXMgPSBbJy9hY2Nlc3MvbG9naW4nLCAnYWNjZXNzL2Vucm9sbCddO1xuICBsZXQgaXNPcGVuID0gZmFsc2U7XG5cbiAgcm91dGVzLmZvckVhY2godXJsID0+IHtcbiAgICBpZiAocm91dGUuaW5kZXhPZih1cmwpID4gLTEpIHtcbiAgICAgIGlzT3BlbiA9IHRydWU7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gaXNPcGVuO1xufTtcblxuZXhwb3J0IGNvbnN0IGJ0b2EgPSAoY3JlZGl0aWFsczogQ3JlZGVudGlhbHMpOiBzdHJpbmcgPT4ge1xuICBpZiAoaXNJT1MpIHtcbiAgICBsZXQgdGV4dCA9IE5TU3RyaW5nLnN0cmluZ1dpdGhTdHJpbmcoY3JlZGl0aWFscy51c2VybmFtZSArICc6JyArIGNyZWRpdGlhbHMucGFzc3dvcmQpO1xuICAgIGxldCBkYXRhID0gdGV4dC5kYXRhVXNpbmdFbmNvZGluZyhOU1VURjhTdHJpbmdFbmNvZGluZyk7XG4gICAgcmV0dXJuIGRhdGEuYmFzZTY0RW5jb2RlZFN0cmluZ1dpdGhPcHRpb25zKDApO1xuICB9IGVsc2Uge1xuICAgIGxldCB0ZXh0ID0gbmV3IGphdmEubGFuZy5TdHJpbmcoY3JlZGl0aWFscy51c2VybmFtZSArICc6JyArIGNyZWRpdGlhbHMucGFzc3dvcmQpO1xuICAgIGxldCBkYXRhID0gdGV4dC5nZXRCeXRlcygnVVRGLTgnKTtcbiAgICByZXR1cm4gYW5kcm9pZC51dGlsLkJhc2U2NC5lbmNvZGVUb1N0cmluZyhkYXRhLCBhbmRyb2lkLnV0aWwuQmFzZTY0LkRFRkFVTFQpO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgbW9iaWxlT3BlcmF0b3JMaXN0ID0gKCkgPT4ge1xuICByZXR1cm4gWydjbGFybycsICdvaScsICd0aW0nLCAndml2byddO1xufTtcblxuZXhwb3J0IGNvbnN0IGZvcm1hdFBob25lTnVtYmVyID0gKHBob25lOiBzdHJpbmcpID0+IHtcbiAgcGhvbmUgPSBwaG9uZS5yZXBsYWNlKC9cXEQvLCAnJyk7XG4gIHJldHVybiAnKzU1JyArIHBob25lO1xufTtcblxuZXhwb3J0IGNvbnN0IGFkanVzdERlY2ltYWwgPSAobnI6bnVtYmVyLCBkZWNpbWFsOm51bWJlcik6IG51bWJlciA9PiB7XG4gIHZhciBvZyA9IE1hdGgucG93KDEwLCBkZWNpbWFsKTtcbiAgcmV0dXJuIE1hdGguZmxvb3IobnIgKiBvZykgLyBvZztcbn07XG4iXX0=