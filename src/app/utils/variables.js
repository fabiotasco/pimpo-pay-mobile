"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var platform_1 = require("tns-core-modules/platform");
/* Endpoints enviroments */
exports.endpoint = 'http://35.243.251.185:8080/api';
//export const endpoint:string = 'http://pimpopay.com/api';
/* Endpoints enviroments */
exports.redirectTo = function (index) {
    var urls = ['/home/balance', '/home/buy', '/home/credit', '/home/transfer', '/home/user'];
    return urls[index];
};
exports.openRoute = function (route) {
    var routes = ['/access/login', 'access/enroll'];
    var isOpen = false;
    routes.forEach(function (url) {
        if (route.indexOf(url) > -1) {
            isOpen = true;
        }
    });
    return isOpen;
};
exports.btoa = function (creditials) {
    if (platform_1.isIOS) {
        var text = NSString.stringWithString(creditials.username + ':' + creditials.password);
        var data = text.dataUsingEncoding(NSUTF8StringEncoding);
        return data.base64EncodedStringWithOptions(0);
    }
    else {
        var text = new java.lang.String(creditials.username + ':' + creditials.password);
        var data = text.getBytes('UTF-8');
        return android.util.Base64.encodeToString(data, android.util.Base64.DEFAULT);
    }
};
exports.mobileOperatorList = function () {
    return ['claro', 'oi', 'tim', 'vivo'];
};
exports.formatPhoneNumber = function (phone) {
    phone = phone.replace(/\D/, '');
    return '+55' + phone;
};
exports.adjustDecimal = function (nr, decimal) {
    var og = Math.pow(10, decimal);
    return Math.floor(nr * og) / og;
};
var PositionChevron;
(function (PositionChevron) {
    PositionChevron[PositionChevron["CLOSE"] = 0] = "CLOSE";
    PositionChevron[PositionChevron["OPEN"] = -90] = "OPEN";
})(PositionChevron = exports.PositionChevron || (exports.PositionChevron = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFyaWFibGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidmFyaWFibGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0Esc0RBQWtEO0FBT2xELDJCQUEyQjtBQUVkLFFBQUEsUUFBUSxHQUFXLGdDQUFnQyxDQUFDO0FBQ2pFLDJEQUEyRDtBQUUzRCwyQkFBMkI7QUFFZCxRQUFBLFVBQVUsR0FBRyxVQUFDLEtBQWE7SUFDdEMsSUFBTSxJQUFJLEdBQUcsQ0FBQyxlQUFlLEVBQUUsV0FBVyxFQUFFLGNBQWMsRUFBRSxnQkFBZ0IsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUM1RixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNyQixDQUFDLENBQUM7QUFFVyxRQUFBLFNBQVMsR0FBRyxVQUFDLEtBQUs7SUFDN0IsSUFBTSxNQUFNLEdBQUcsQ0FBQyxlQUFlLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDbEQsSUFBSSxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBRW5CLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBQSxHQUFHO1FBQ2hCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRTtZQUMzQixNQUFNLEdBQUcsSUFBSSxDQUFDO1NBQ2Y7SUFDSCxDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsQ0FBQztBQUVXLFFBQUEsSUFBSSxHQUFHLFVBQUMsVUFBdUI7SUFDMUMsSUFBSSxnQkFBSyxFQUFFO1FBQ1QsSUFBSSxJQUFJLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxRQUFRLEdBQUcsR0FBRyxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN0RixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQUN4RCxPQUFPLElBQUksQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUMvQztTQUFNO1FBQ0wsSUFBSSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsUUFBUSxHQUFHLEdBQUcsR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDakYsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNsQyxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDOUU7QUFDSCxDQUFDLENBQUM7QUFFVyxRQUFBLGtCQUFrQixHQUFHO0lBQ2hDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztBQUN4QyxDQUFDLENBQUM7QUFFVyxRQUFBLGlCQUFpQixHQUFHLFVBQUMsS0FBYTtJQUM3QyxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDaEMsT0FBTyxLQUFLLEdBQUcsS0FBSyxDQUFDO0FBQ3ZCLENBQUMsQ0FBQztBQUVXLFFBQUEsYUFBYSxHQUFHLFVBQUMsRUFBVSxFQUFFLE9BQWU7SUFDdkQsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDL0IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7QUFDbEMsQ0FBQyxDQUFDO0FBRUYsSUFBWSxlQUdYO0FBSEQsV0FBWSxlQUFlO0lBQ3pCLHVEQUFTLENBQUE7SUFDVCx1REFBVSxDQUFBO0FBQ1osQ0FBQyxFQUhXLGVBQWUsR0FBZix1QkFBZSxLQUFmLHVCQUFlLFFBRzFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3JlZGVudGlhbHMgfSBmcm9tICcuLi9tb2RlbHMvY3JlZGVudGlhbHMnO1xuaW1wb3J0IHsgaXNJT1MgfSBmcm9tICd0bnMtY29yZS1tb2R1bGVzL3BsYXRmb3JtJztcblxuZGVjbGFyZSB2YXIgTlNTdHJpbmc6IGFueTtcbmRlY2xhcmUgdmFyIE5TVVRGOFN0cmluZ0VuY29kaW5nOiBhbnk7XG5kZWNsYXJlIHZhciBqYXZhOiBhbnk7XG5kZWNsYXJlIHZhciBhbmRyb2lkOiBhbnk7XG5cbi8qIEVuZHBvaW50cyBlbnZpcm9tZW50cyAqL1xuXG5leHBvcnQgY29uc3QgZW5kcG9pbnQ6IHN0cmluZyA9ICdodHRwOi8vMzUuMjQzLjI1MS4xODU6ODA4MC9hcGknO1xuLy9leHBvcnQgY29uc3QgZW5kcG9pbnQ6c3RyaW5nID0gJ2h0dHA6Ly9waW1wb3BheS5jb20vYXBpJztcblxuLyogRW5kcG9pbnRzIGVudmlyb21lbnRzICovXG5cbmV4cG9ydCBjb25zdCByZWRpcmVjdFRvID0gKGluZGV4OiBudW1iZXIpOiBzdHJpbmcgPT4ge1xuICBjb25zdCB1cmxzID0gWycvaG9tZS9iYWxhbmNlJywgJy9ob21lL2J1eScsICcvaG9tZS9jcmVkaXQnLCAnL2hvbWUvdHJhbnNmZXInLCAnL2hvbWUvdXNlciddO1xuICByZXR1cm4gdXJsc1tpbmRleF07XG59O1xuXG5leHBvcnQgY29uc3Qgb3BlblJvdXRlID0gKHJvdXRlKTogYm9vbGVhbiA9PiB7XG4gIGNvbnN0IHJvdXRlcyA9IFsnL2FjY2Vzcy9sb2dpbicsICdhY2Nlc3MvZW5yb2xsJ107XG4gIGxldCBpc09wZW4gPSBmYWxzZTtcblxuICByb3V0ZXMuZm9yRWFjaCh1cmwgPT4ge1xuICAgIGlmIChyb3V0ZS5pbmRleE9mKHVybCkgPiAtMSkge1xuICAgICAgaXNPcGVuID0gdHJ1ZTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBpc09wZW47XG59O1xuXG5leHBvcnQgY29uc3QgYnRvYSA9IChjcmVkaXRpYWxzOiBDcmVkZW50aWFscyk6IHN0cmluZyA9PiB7XG4gIGlmIChpc0lPUykge1xuICAgIGxldCB0ZXh0ID0gTlNTdHJpbmcuc3RyaW5nV2l0aFN0cmluZyhjcmVkaXRpYWxzLnVzZXJuYW1lICsgJzonICsgY3JlZGl0aWFscy5wYXNzd29yZCk7XG4gICAgbGV0IGRhdGEgPSB0ZXh0LmRhdGFVc2luZ0VuY29kaW5nKE5TVVRGOFN0cmluZ0VuY29kaW5nKTtcbiAgICByZXR1cm4gZGF0YS5iYXNlNjRFbmNvZGVkU3RyaW5nV2l0aE9wdGlvbnMoMCk7XG4gIH0gZWxzZSB7XG4gICAgbGV0IHRleHQgPSBuZXcgamF2YS5sYW5nLlN0cmluZyhjcmVkaXRpYWxzLnVzZXJuYW1lICsgJzonICsgY3JlZGl0aWFscy5wYXNzd29yZCk7XG4gICAgbGV0IGRhdGEgPSB0ZXh0LmdldEJ5dGVzKCdVVEYtOCcpO1xuICAgIHJldHVybiBhbmRyb2lkLnV0aWwuQmFzZTY0LmVuY29kZVRvU3RyaW5nKGRhdGEsIGFuZHJvaWQudXRpbC5CYXNlNjQuREVGQVVMVCk7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBtb2JpbGVPcGVyYXRvckxpc3QgPSAoKSA9PiB7XG4gIHJldHVybiBbJ2NsYXJvJywgJ29pJywgJ3RpbScsICd2aXZvJ107XG59O1xuXG5leHBvcnQgY29uc3QgZm9ybWF0UGhvbmVOdW1iZXIgPSAocGhvbmU6IHN0cmluZykgPT4ge1xuICBwaG9uZSA9IHBob25lLnJlcGxhY2UoL1xcRC8sICcnKTtcbiAgcmV0dXJuICcrNTUnICsgcGhvbmU7XG59O1xuXG5leHBvcnQgY29uc3QgYWRqdXN0RGVjaW1hbCA9IChucjogbnVtYmVyLCBkZWNpbWFsOiBudW1iZXIpOiBudW1iZXIgPT4ge1xuICB2YXIgb2cgPSBNYXRoLnBvdygxMCwgZGVjaW1hbCk7XG4gIHJldHVybiBNYXRoLmZsb29yKG5yICogb2cpIC8gb2c7XG59O1xuXG5leHBvcnQgZW51bSBQb3NpdGlvbkNoZXZyb24ge1xuICBDTE9TRSA9IDAsXG4gIE9QRU4gPSAtOTBcbn1cbiJdfQ==