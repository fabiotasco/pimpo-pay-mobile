"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var platform_1 = require("tns-core-modules/platform");
/* Endpoints enviroments */
exports.ACCESS = 'accesss';
exports.endpoint = 'http://35.243.251.185:8080/api';
//export const endpoint:string = 'http://pimpopay.com/api';
/* Endpoints enviroments */
exports.redirectTo = function (index) {
    var urls = [
        '/home/balance',
        '/home/buy',
        '/home/credit',
        '/home/transfer',
        '/home/user'
    ];
    return urls[index];
};
exports.openRoute = function (route) {
    var routes = ['/access/login', 'access/enroll'];
    var isOpen = false;
    routes.forEach(function (url) {
        if (route.indexOf(url) > -1) {
            isOpen = true;
        }
    });
    return isOpen;
};
exports.btoa = function (creditials) {
    if (platform_1.isIOS) {
        var text = NSString.stringWithString(creditials.username + ':' + creditials.password);
        var data = text.dataUsingEncoding(NSUTF8StringEncoding);
        return data.base64EncodedStringWithOptions(0);
    }
    else {
        var text = new java.lang.String(creditials.username + ':' + creditials.password);
        var data = text.getBytes('UTF-8');
        return android.util.Base64.encodeToString(data, android.util.Base64.DEFAULT);
    }
};
exports.mobileOperatorList = function () {
    return ['claro', 'oi', 'tim', 'vivo'];
};
exports.formatPhoneNumber = function (phone) {
    phone = phone.replace(/\D/, '');
    return '+55' + phone;
};
exports.adjustDecimal = function (nr, decimal) {
    var og = Math.pow(10, decimal);
    return Math.floor(nr * og) / og;
};
var PositionChevron;
(function (PositionChevron) {
    PositionChevron[PositionChevron["CLOSE"] = 0] = "CLOSE";
    PositionChevron[PositionChevron["OPEN"] = -90] = "OPEN";
})(PositionChevron = exports.PositionChevron || (exports.PositionChevron = {}));
var AccessType;
(function (AccessType) {
    AccessType["BUSINESS"] = "Business";
    AccessType["PERSONAL"] = "Personal";
})(AccessType = exports.AccessType || (exports.AccessType = {}));
var TransactionStatus;
(function (TransactionStatus) {
    TransactionStatus["AUTHORIZED"] = "Authorized";
    /** Negada */
    TransactionStatus["DENIED"] = "Denied";
    /** Cancelada */
    TransactionStatus["CANCELLED"] = "Cancelled";
    /** Liquidada */
    TransactionStatus["SETTLED"] = "Settled";
    /** Disputada */
    TransactionStatus["DISPUTED"] = "Disputed";
    /** Disputa respondida */
    TransactionStatus["DISPUTE_RESPONDED"] = "Dispute_Responded";
    /** Arbitrada */
    TransactionStatus["ARBITRATED"] = "Arbitrated";
})(TransactionStatus = exports.TransactionStatus || (exports.TransactionStatus = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFyaWFibGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidmFyaWFibGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0Esc0RBQWtEO0FBT2xELDJCQUEyQjtBQUVkLFFBQUEsTUFBTSxHQUFHLFNBQVMsQ0FBQztBQUVuQixRQUFBLFFBQVEsR0FBVyxnQ0FBZ0MsQ0FBQztBQUNqRSwyREFBMkQ7QUFFM0QsMkJBQTJCO0FBRWQsUUFBQSxVQUFVLEdBQUcsVUFBQyxLQUFhO0lBQ3RDLElBQU0sSUFBSSxHQUFHO1FBQ1gsZUFBZTtRQUNmLFdBQVc7UUFDWCxjQUFjO1FBQ2QsZ0JBQWdCO1FBQ2hCLFlBQVk7S0FDYixDQUFDO0lBQ0YsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDckIsQ0FBQyxDQUFDO0FBRVcsUUFBQSxTQUFTLEdBQUcsVUFBQyxLQUFLO0lBQzdCLElBQU0sTUFBTSxHQUFHLENBQUMsZUFBZSxFQUFFLGVBQWUsQ0FBQyxDQUFDO0lBQ2xELElBQUksTUFBTSxHQUFHLEtBQUssQ0FBQztJQUVuQixNQUFNLENBQUMsT0FBTyxDQUFDLFVBQUEsR0FBRztRQUNoQixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7WUFDM0IsTUFBTSxHQUFHLElBQUksQ0FBQztTQUNmO0lBQ0gsQ0FBQyxDQUFDLENBQUM7SUFFSCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDLENBQUM7QUFFVyxRQUFBLElBQUksR0FBRyxVQUFDLFVBQXVCO0lBQzFDLElBQUksZ0JBQUssRUFBRTtRQUNULElBQUksSUFBSSxHQUFHLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FDbEMsVUFBVSxDQUFDLFFBQVEsR0FBRyxHQUFHLEdBQUcsVUFBVSxDQUFDLFFBQVEsQ0FDaEQsQ0FBQztRQUNGLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQ3hELE9BQU8sSUFBSSxDQUFDLDhCQUE4QixDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQy9DO1NBQU07UUFDTCxJQUFJLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUM3QixVQUFVLENBQUMsUUFBUSxHQUFHLEdBQUcsR0FBRyxVQUFVLENBQUMsUUFBUSxDQUNoRCxDQUFDO1FBQ0YsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNsQyxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FDdkMsSUFBSSxFQUNKLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FDNUIsQ0FBQztLQUNIO0FBQ0gsQ0FBQyxDQUFDO0FBRVcsUUFBQSxrQkFBa0IsR0FBRztJQUNoQyxPQUFPLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDeEMsQ0FBQyxDQUFDO0FBRVcsUUFBQSxpQkFBaUIsR0FBRyxVQUFDLEtBQWE7SUFDN0MsS0FBSyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ2hDLE9BQU8sS0FBSyxHQUFHLEtBQUssQ0FBQztBQUN2QixDQUFDLENBQUM7QUFFVyxRQUFBLGFBQWEsR0FBRyxVQUFDLEVBQVUsRUFBRSxPQUFlO0lBQ3ZELElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQ2xDLENBQUMsQ0FBQztBQUVGLElBQVksZUFHWDtBQUhELFdBQVksZUFBZTtJQUN6Qix1REFBUyxDQUFBO0lBQ1QsdURBQVUsQ0FBQTtBQUNaLENBQUMsRUFIVyxlQUFlLEdBQWYsdUJBQWUsS0FBZix1QkFBZSxRQUcxQjtBQUVELElBQVksVUFHWDtBQUhELFdBQVksVUFBVTtJQUNwQixtQ0FBcUIsQ0FBQTtJQUNyQixtQ0FBcUIsQ0FBQTtBQUN2QixDQUFDLEVBSFcsVUFBVSxHQUFWLGtCQUFVLEtBQVYsa0JBQVUsUUFHckI7QUFFRCxJQUFZLGlCQW1CWDtBQW5CRCxXQUFZLGlCQUFpQjtJQUMzQiw4Q0FBeUIsQ0FBQTtJQUN6QixhQUFhO0lBQ2Isc0NBQWlCLENBQUE7SUFFakIsZ0JBQWdCO0lBQ2hCLDRDQUF1QixDQUFBO0lBRXZCLGdCQUFnQjtJQUNoQix3Q0FBbUIsQ0FBQTtJQUVuQixnQkFBZ0I7SUFDaEIsMENBQXFCLENBQUE7SUFFckIseUJBQXlCO0lBQ3pCLDREQUF1QyxDQUFBO0lBRXZDLGdCQUFnQjtJQUNoQiw4Q0FBeUIsQ0FBQTtBQUMzQixDQUFDLEVBbkJXLGlCQUFpQixHQUFqQix5QkFBaUIsS0FBakIseUJBQWlCLFFBbUI1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyZWRlbnRpYWxzIH0gZnJvbSAnLi4vbW9kZWxzL2NyZWRlbnRpYWxzJztcbmltcG9ydCB7IGlzSU9TIH0gZnJvbSAndG5zLWNvcmUtbW9kdWxlcy9wbGF0Zm9ybSc7XG5cbmRlY2xhcmUgdmFyIE5TU3RyaW5nOiBhbnk7XG5kZWNsYXJlIHZhciBOU1VURjhTdHJpbmdFbmNvZGluZzogYW55O1xuZGVjbGFyZSB2YXIgamF2YTogYW55O1xuZGVjbGFyZSB2YXIgYW5kcm9pZDogYW55O1xuXG4vKiBFbmRwb2ludHMgZW52aXJvbWVudHMgKi9cblxuZXhwb3J0IGNvbnN0IEFDQ0VTUyA9ICdhY2Nlc3NzJztcblxuZXhwb3J0IGNvbnN0IGVuZHBvaW50OiBzdHJpbmcgPSAnaHR0cDovLzM1LjI0My4yNTEuMTg1OjgwODAvYXBpJztcbi8vZXhwb3J0IGNvbnN0IGVuZHBvaW50OnN0cmluZyA9ICdodHRwOi8vcGltcG9wYXkuY29tL2FwaSc7XG5cbi8qIEVuZHBvaW50cyBlbnZpcm9tZW50cyAqL1xuXG5leHBvcnQgY29uc3QgcmVkaXJlY3RUbyA9IChpbmRleDogbnVtYmVyKTogc3RyaW5nID0+IHtcbiAgY29uc3QgdXJscyA9IFtcbiAgICAnL2hvbWUvYmFsYW5jZScsXG4gICAgJy9ob21lL2J1eScsXG4gICAgJy9ob21lL2NyZWRpdCcsXG4gICAgJy9ob21lL3RyYW5zZmVyJyxcbiAgICAnL2hvbWUvdXNlcidcbiAgXTtcbiAgcmV0dXJuIHVybHNbaW5kZXhdO1xufTtcblxuZXhwb3J0IGNvbnN0IG9wZW5Sb3V0ZSA9IChyb3V0ZSk6IGJvb2xlYW4gPT4ge1xuICBjb25zdCByb3V0ZXMgPSBbJy9hY2Nlc3MvbG9naW4nLCAnYWNjZXNzL2Vucm9sbCddO1xuICBsZXQgaXNPcGVuID0gZmFsc2U7XG5cbiAgcm91dGVzLmZvckVhY2godXJsID0+IHtcbiAgICBpZiAocm91dGUuaW5kZXhPZih1cmwpID4gLTEpIHtcbiAgICAgIGlzT3BlbiA9IHRydWU7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gaXNPcGVuO1xufTtcblxuZXhwb3J0IGNvbnN0IGJ0b2EgPSAoY3JlZGl0aWFsczogQ3JlZGVudGlhbHMpOiBzdHJpbmcgPT4ge1xuICBpZiAoaXNJT1MpIHtcbiAgICBsZXQgdGV4dCA9IE5TU3RyaW5nLnN0cmluZ1dpdGhTdHJpbmcoXG4gICAgICBjcmVkaXRpYWxzLnVzZXJuYW1lICsgJzonICsgY3JlZGl0aWFscy5wYXNzd29yZFxuICAgICk7XG4gICAgbGV0IGRhdGEgPSB0ZXh0LmRhdGFVc2luZ0VuY29kaW5nKE5TVVRGOFN0cmluZ0VuY29kaW5nKTtcbiAgICByZXR1cm4gZGF0YS5iYXNlNjRFbmNvZGVkU3RyaW5nV2l0aE9wdGlvbnMoMCk7XG4gIH0gZWxzZSB7XG4gICAgbGV0IHRleHQgPSBuZXcgamF2YS5sYW5nLlN0cmluZyhcbiAgICAgIGNyZWRpdGlhbHMudXNlcm5hbWUgKyAnOicgKyBjcmVkaXRpYWxzLnBhc3N3b3JkXG4gICAgKTtcbiAgICBsZXQgZGF0YSA9IHRleHQuZ2V0Qnl0ZXMoJ1VURi04Jyk7XG4gICAgcmV0dXJuIGFuZHJvaWQudXRpbC5CYXNlNjQuZW5jb2RlVG9TdHJpbmcoXG4gICAgICBkYXRhLFxuICAgICAgYW5kcm9pZC51dGlsLkJhc2U2NC5ERUZBVUxUXG4gICAgKTtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IG1vYmlsZU9wZXJhdG9yTGlzdCA9ICgpID0+IHtcbiAgcmV0dXJuIFsnY2xhcm8nLCAnb2knLCAndGltJywgJ3Zpdm8nXTtcbn07XG5cbmV4cG9ydCBjb25zdCBmb3JtYXRQaG9uZU51bWJlciA9IChwaG9uZTogc3RyaW5nKSA9PiB7XG4gIHBob25lID0gcGhvbmUucmVwbGFjZSgvXFxELywgJycpO1xuICByZXR1cm4gJys1NScgKyBwaG9uZTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGp1c3REZWNpbWFsID0gKG5yOiBudW1iZXIsIGRlY2ltYWw6IG51bWJlcik6IG51bWJlciA9PiB7XG4gIHZhciBvZyA9IE1hdGgucG93KDEwLCBkZWNpbWFsKTtcbiAgcmV0dXJuIE1hdGguZmxvb3IobnIgKiBvZykgLyBvZztcbn07XG5cbmV4cG9ydCBlbnVtIFBvc2l0aW9uQ2hldnJvbiB7XG4gIENMT1NFID0gMCxcbiAgT1BFTiA9IC05MFxufVxuXG5leHBvcnQgZW51bSBBY2Nlc3NUeXBlIHtcbiAgQlVTSU5FU1MgPSAnQnVzaW5lc3MnLFxuICBQRVJTT05BTCA9ICdQZXJzb25hbCdcbn1cblxuZXhwb3J0IGVudW0gVHJhbnNhY3Rpb25TdGF0dXMge1xuICBBVVRIT1JJWkVEID0gJ0F1dGhvcml6ZWQnLFxuICAvKiogTmVnYWRhICovXG4gIERFTklFRCA9ICdEZW5pZWQnLFxuXG4gIC8qKiBDYW5jZWxhZGEgKi9cbiAgQ0FOQ0VMTEVEID0gJ0NhbmNlbGxlZCcsXG5cbiAgLyoqIExpcXVpZGFkYSAqL1xuICBTRVRUTEVEID0gJ1NldHRsZWQnLFxuXG4gIC8qKiBEaXNwdXRhZGEgKi9cbiAgRElTUFVURUQgPSAnRGlzcHV0ZWQnLFxuXG4gIC8qKiBEaXNwdXRhIHJlc3BvbmRpZGEgKi9cbiAgRElTUFVURV9SRVNQT05ERUQgPSAnRGlzcHV0ZV9SZXNwb25kZWQnLFxuXG4gIC8qKiBBcmJpdHJhZGEgKi9cbiAgQVJCSVRSQVRFRCA9ICdBcmJpdHJhdGVkJ1xufVxuIl19